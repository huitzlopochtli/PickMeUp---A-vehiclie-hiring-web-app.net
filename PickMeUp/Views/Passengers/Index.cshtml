@model PickMeUp.Models.Passenger.PassengersViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_passengerView.cshtml";
}

<h2>Request for a Ride</h2>
@{
    if (ViewBag.Msg == null)
    {
        

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.StartLocation)
            @Html.HiddenFor(model => model.EndLocation)
            @Html.HiddenFor(model => model.Expense)
            @Html.HiddenFor(model => model.Distance)
            <div class="col-md-8">
                <div class="row form-control">
                    <div class="col-md-5">
                        <label>Select your location : </label>
                    </div>
                    <div class="col-md-7">
                        <input type="text" id="txtSource" name="txtSource" />
                        @*<div id="txtSource">@Html.EditorFor(model => model.StartLocation, new { @class = "form-control"})</div>*@
                    </div>
                </div>


                <div class="row form-control">
                    <div class="col-md-5">
                        <label>Select your Destination : </label>
                    </div>
                    <div class="col-md-7">
                        <input type="text" id="txtDestination" name="txtDestination" onclose="GetRoute()" />
                    </div>
                </div>

                <div class="row">
                    <input type="button" value="Get Route" onclick="GetRoute()" class="btn btn-default btn-block" />
                </div>

                <br />
                <div class="row" style="min-height:0px">
                    <div class="col-md-6">
                        <div id="dvMap" style="max-height:500px; min-height:500px; width:auto"></div>
                    </div>
                    <div class="col-md-6">
                        <div id="dvPanel" style="width: auto; height: 500px"></div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-3">
                        @Html.DisplayNameFor(model => model.StartLocation)
                    </div>
                    <div class="col-md-3" id="startLocation">
                        @Html.DisplayFor(model => model.StartLocation, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        @Html.DisplayNameFor(model => model.EndLocation)
                    </div>
                    <div class="col-md-3" id="endLocation">
                        @Html.DisplayFor(model => model.EndLocation, new { @class = "form-control" })
                    </div>
                </div>


                <div id="distance">

                </div>



                <div class="row">
                    <div class="col-md-3">
                        @Html.DisplayNameFor(model => model.Expense)
                    </div>
                    <div class="col-md-3" id="expense">
                        @Html.DisplayFor(model => model.Expense, new { @class = "form-control" })
                        <small>tk</small>
                    </div>
                </div>


                <div class="row col-md-2">
                    <input type="submit" value="Request a ride" class="btn btn-success" />
                </div>


            </div>

            <div class=" row col-md-4 table-bordered">
                <div class="row btn-block">
                    <div class="col-md-6">
                        @Html.DisplayNameFor(model => model.VehicleType)
                    </div>

                    <div class="col-md-6">
                        <div id="VehicleType">
                            @Html.DropDownListFor(model => model.VehicleType, new SelectList(ViewBag.VehicleTypes, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        @*<small id="FareRate">@Html.DisplayFor(model => model.FareRate, new { @class = "text-danger", id = "FareRate" })</small>*@
                    </div>

                </div>

                <div class="row btn-block">
                    <div class="col-md-6">
                        @Html.DisplayNameFor(model => model.PaymentType)
                    </div>

                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.PaymentType, new SelectList(ViewBag.PaymentTypes, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

            </div>

            <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCiBz3TAUhgB2cXAZBztFNLZy593SpJLOk"></script>
            <script type="text/javascript">
                google.maps.event.addDomListener(window, 'load', function () {
                    var places = new google.maps.places.Autocomplete(document.getElementById('txtSource'));
                    places = new google.maps.places.Autocomplete(document.getElementById('txtDestination'));
                    google.maps.event.addListener(places, 'place_changed', function () {
                        var place = places.getPlace();
                        var address = place.formatted_address;
                        var latitude = place.geometry.location.lat();
                        var longitude = place.geometry.location.lng();
                        var mesg = "Address: " + address;
                        mesg += "\nLatitude: " + latitude;
                        mesg += "\nLongitude: " + longitude;
                        //alert(mesg);
                    });
                });

                var source, destination;
                var directionsDisplay;
                var directionsService = new google.maps.DirectionsService();
                google.maps.event.addDomListener(window, 'load', function () {
                    new google.maps.places.SearchBox(document.getElementById('txtSource'));
                    new google.maps.places.SearchBox(document.getElementById('txtDestination'));
                    directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
                });

                function GetRoute() {
                    document.getElementById('StartLocation').value = document.getElementById("txtSource").value;
                    document.getElementById('startLocation').innerHTML = document.getElementById("txtSource").value;

                    document.getElementById('EndLocation').value = document.getElementById("txtDestination").value;
                    document.getElementById('endLocation').innerHTML = document.getElementById("txtDestination").value;


                    var dhaka = new google.maps.LatLng(23.794887, 90.402476);
                    var mapOptions = {
                        zoom: 13,
                        center: dhaka
                    };
                    map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('dvPanel'));

                    //*********DIRECTIONS AND ROUTE**********************//
                    source = document.getElementById("txtSource").value;
                    destination = document.getElementById("txtDestination").value;

                    var request = {
                        origin: source,
                        destination: destination,
                        travelMode: google.maps.TravelMode.DRIVING
                    };
                    directionsService.route(request, function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                        }
                    });

                    //*********DISTANCE AND DURATION**********************//
                    var service = new google.maps.DistanceMatrixService();
                    service.getDistanceMatrix({
                        origins: [source],
                        destinations: [destination],
                        travelMode: google.maps.TravelMode.DRIVING,
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false
                    }, function (response, status) {
                        if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                            var distance = response.rows[0].elements[0].distance.text;

                            var duration = response.rows[0].elements[0].duration.text;
                            var Distance = document.getElementById("distance");
                            Distance.innerHTML = "";
                            Distance.innerHTML += "Distance: \t" + distance + "<br />";
                            Distance.innerHTML += "Duration: \t" + duration;
                            //document.getElementById('Expense').value = document.getElementById('Distance') * document.getElementById('FareRate');
                            document.getElementById('expense').innerHTML = (parseFloat(distance) * 30).toString() + " tk";

                            document.getElementById('Distance').value = parseFloat(distance);

                        } else {
                            alert("Unable to find the distance via road.");
                        }
                    });
                }
            </script>
            @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
                <script>
                        $(document).ready(function () {
                            $("VehicleType").click(function () {
                                alert("Error while inserting data");
                                var fareRate;
                                $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetFareRate")',
                            data: fareRate,
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function () {
                                alert("Data has been added successfully.");
                                document.getElementById("FareRate").value = fareRate.value;
                                document.getElementById("FareRate").innerHTML = fareRate.value;

                            },
                            error: function () {
                                alert("Error while inserting data");
                            }
                                });
                                return false;
                            });

                        });
                </script>*@

        }

    }
    else
    {
        <p>You already have requested a ride.
        @Html.ActionLink("Click Here ", "RideOnGoing")
    to track it.
    </p>
    }
}